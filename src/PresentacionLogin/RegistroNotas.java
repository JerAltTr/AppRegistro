package PresentacionLogin;

import Datos.Escrituratxt;
import Datos.Lecturatxt;
import Entidad.Estudiante;
import Entidad.RegistroNota;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class RegistroNotas extends javax.swing.JInternalFrame {

    /**
     * Creates new form RegistroNotas
     */
    public RegistroNotas() {
        initComponents();
        disenioTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbCurso = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        spinN1 = new javax.swing.JSpinner();
        spinN2 = new javax.swing.JSpinner();
        spinPy = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        spinEf = new javax.swing.JSpinner();
        btnRegistrar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableNotas = new javax.swing.JTable();

        setTitle("Registro de notas");

        jLabel1.setFont(new java.awt.Font("Swis721 WGL4 BT", 1, 24)); // NOI18N
        jLabel1.setText("REGISTRO NOTAS");

        jLabel2.setText("DNI:");

        txtDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDNIKeyTyped(evt);
            }
        });

        jLabel3.setText("Curso:");

        cbCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matemática", "Comunicación", "Ciencias", "Taller" }));

        jLabel4.setText("Nota 01:");

        jLabel5.setText("Nota 02:");

        jLabel6.setText("Proyecto:");

        spinN1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 20, 1));
        spinN1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        spinN2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 20, 1));

        spinPy.setModel(new javax.swing.SpinnerNumberModel(0, 0, 20, 1));

        jLabel7.setText("Examen final:");

        spinEf.setModel(new javax.swing.SpinnerNumberModel(0, 0, 20, 1));

        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/carpeta.png"))); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegistrar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnRegistrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistrarMouseClicked(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/borrar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
        });

        tableNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableNotas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(cbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(spinN1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(101, 101, 101)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(150, 150, 150))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(spinN2)
                                        .addGap(111, 111, 111)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(spinPy, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinEf, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addGap(105, 105, 105))
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(288, 288, 288)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(spinEf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDNI)
                            .addComponent(cbCurso, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinN1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinN2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinPy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarMouseClicked
        // TODO add your handling code here:
        if (txtDNI.getText().isEmpty() || cbCurso.getSelectedIndex() == 0
                || (Integer) spinN1.getValue() == 0 || (Integer) spinN2.getValue() == 0
                || (Integer) spinPy.getValue() == 0 || (Integer) spinEf.getValue() == 0) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.");
        } else {
            if (buscarEstudiantePorDni(txtDNI.getText())) {
                Escrituratxt escribir = new Escrituratxt();
                escribir.registrarNota(obtenerDatos());
                disenioTabla();
                limpiarcampos();
            } else {
                JOptionPane.showMessageDialog(null, "El estudiante no se encuentra matriculado.", "Alerta", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnRegistrarMouseClicked

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        // TODO add your handling code here:
        // Obtener la fila seleccionada
        int selectedRow = tableNotas.getSelectedRow();

        // Verificar si se ha seleccionado una fila
        if (selectedRow != -1) {
            // Eliminar la fila seleccionada de la tabla
            DefaultTableModel model = (DefaultTableModel) tableNotas.getModel();
            model.removeRow(selectedRow);

            // Obtener la lista de todas las notas del archivo de texto
            Lecturatxt leer = new Lecturatxt();
            List<RegistroNota> listaNotas = leer.leerNotas();

            // Eliminar la entrada correspondiente en la lista de notas
            listaNotas.remove(selectedRow);

            // Escribir la lista actualizada de notas en el archivo de texto
            Escrituratxt escribir = new Escrituratxt();
            escribir.actualizarNotas(listaNotas);

        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una fila para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void txtDNIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDNIKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (txtDNI.getText().length() > 7) {
            evt.consume(); // Consume el evento si se alcanzó el límite de caracteres
        }
    }//GEN-LAST:event_txtDNIKeyTyped

    private RegistroNota obtenerDatos() {
        String dni = txtDNI.getText();
        String curso = cbCurso.getSelectedItem().toString();
        String nota1 = spinN1.getValue().toString();
        String nota2 = spinN2.getValue().toString();
        String nota3 = spinPy.getValue().toString();
        String nota4 = spinEf.getValue().toString();
        RegistroNota registroNotas = new RegistroNota(dni, curso, nota1, nota2, nota3, nota4);
        return registroNotas;
    }

    DefaultTableModel model;

    private void disenioTabla() {
        model = new DefaultTableModel(new Object[]{"CURSO", "ESTUDIANTE", "NOTA 01", "NOTA 02", "NOTA 03", "EXAMEN", "PROMEDIO", "ESTADO"}, 0);
        tableNotas.setModel(model);
        cargarDatos();
    }

    private void cargarDatos() {
        Lecturatxt leer = new Lecturatxt();
        List<RegistroNota> listaNotas = leer.leerNotas();
        for (RegistroNota estudiante : listaNotas) {
            int[] notas = new int[4];
            notas[0] = Integer.parseInt(estudiante.getN1());
            notas[1] = Integer.parseInt(estudiante.getN2());
            notas[2] = Integer.parseInt(estudiante.getPy());
            notas[3] = Integer.parseInt(estudiante.getEf());
            int promedio = calcularPromedio(notas[0], notas[1], notas[2], notas[3]);
            model.addRow(new Object[]{
                estudiante.getCurso(),
                buscarNombreestudiantePorDni(estudiante.getDNI()),
                estudiante.getN1(),
                estudiante.getN2(),
                estudiante.getPy(),
                estudiante.getEf(),
                String.valueOf(promedio),
                estado(promedio)});
        }

    }

    public void limpiarcampos() {
        txtDNI.setText(null);
        spinN1.setValue(0);
        spinN2.setValue(0);
        spinPy.setValue(0);
        spinEf.setValue(0);
    }

    public int calcularPromedio(int n1, int n2, int py, int ef) {
        return (((((n1 + n2) / 2) + py) / 2) + ef) / 2;
    }

    public String estado(double promedio) {
        if (promedio > 10.5) {
            return "Aprobado";
        }
        return " Desaprobado";
    }

    public boolean buscarEstudiantePorDni(String dniBuscado) {
        Lecturatxt leer = new Lecturatxt();

        for (Estudiante estudiantes : leer.leerEstudiantes()) {
            if (estudiantes.getDNI().equals(dniBuscado)) {
                return true;
            }
        }

        return false;  // Retorna null si no se encuentra el dueño con el dni proporcionado
    }

    public String buscarNombreestudiantePorDni(String dniBuscado) {
        Lecturatxt leer = new Lecturatxt();
        for (Estudiante estudiantes : leer.leerEstudiantes()) {
            if (estudiantes.getDNI().equals(dniBuscado)) {
                return estudiantes.getNombre();
            }
        }

        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cbCurso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spinEf;
    private javax.swing.JSpinner spinN1;
    private javax.swing.JSpinner spinN2;
    private javax.swing.JSpinner spinPy;
    private javax.swing.JTable tableNotas;
    private javax.swing.JTextField txtDNI;
    // End of variables declaration//GEN-END:variables
}
